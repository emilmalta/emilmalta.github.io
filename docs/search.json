[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Population Dynamics of Nuuk\n\n\n\n\n\nWhy does Nuuk have so many more men than women? Exploring how immigration shapes the population across age, gender and neighborhoods.\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Emil Nikki Malta",
    "section": "",
    "text": "I’m Emil. I work with data (mostly healthcare and demographics), turning tangled data into tools and visuals people can actually use.\nI like creative problem-solving, data storytelling, and learning new things. Outside of work, I’m either chasing my kids, or exploring new ideas and tools."
  },
  {
    "objectID": "index.html#hi",
    "href": "index.html#hi",
    "title": "Emil Nikki Malta",
    "section": "",
    "text": "I’m Emil. I work with data (mostly healthcare and demographics), turning tangled data into tools and visuals people can actually use.\nI like creative problem-solving, data storytelling, and learning new things. Outside of work, I’m either chasing my kids, or exploring new ideas and tools."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Emil Nikki Malta",
    "section": "Experience",
    "text": "Experience\nData Consultant\nRegion Midtjylland (Aarhus, 2021 - Present)\n\nI develop high-quality analysis tools and pipelines for healthcare procurement, contract management, and logistics.\nCollaboration with interdisciplinary teams. Focus on environmental impact of procurement and logistics.\n\nStatistics Officer (AC)\nStatistics Greenland (Nuuk, 2018 - 2021)\n\nStatistical programming and maintenance of official national registers."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Emil Nikki Malta",
    "section": "Education",
    "text": "Education\nM.Sc. Bioinformatics\nAarhus University (2016 - 2018)\n\nStatistical modeling and data analysis.\nFocus on application in forensics - e.g. statistical mass spectrometry analysis of fingerprint residue, using regression and classification trees.\n\nB.Sc. Molecular Biology\nAarhus University (2013 - 2016)\n\nMinor in Bioinformatics. Focus on genetic epidemiology."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Predicting House Prices with Machine Learning\n\n\n\nPython\n\n\nMachine Learning\n\n\nData Cleaning\n\n\n\nThis project involves using machine learning algorithms to predict house prices based on various features such as location, size, and amenities. It includes data cleaning, feature engineering, and model selection.\n\n\n\nJan 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustomer Segmentation Using Clustering Techniques\n\n\n\nR\n\n\nMachine Learning\n\n\nClustering\n\n\nStatistical Modelling\n\n\n\nThis project focuses on segmenting customers into different groups based on their purchasing behavior and demographics. It uses clustering algorithms like K-means and hierarchical clustering to identify distinct customer segments.\n\n\n\nApr 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizing Global CO2 Emissions\n\n\n\nR\n\n\nData Visualization\n\n\nEnvironmental Science\n\n\n\nThis project involves creating visualizations to show trends in global CO2 emissions over time. It includes data extraction from public databases, data cleaning, and using visualization libraries to create interactive charts and graphs.\n\n\n\nJul 1, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html",
    "title": "Population Dynamics of Nuuk",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(osmdata)\n\nnuuk_roads &lt;- opq(\"Nuuk, Greenland\") %&gt;% \n  add_osm_feature(\"highway\") %&gt;% \n  osmdata_sf() %&gt;% \n  pluck(\"osm_lines\")\n\nnuuk_buildings &lt;- opq(\"Nuuk, Greenland\") %&gt;% \n  add_osm_feature(\"building\") %&gt;% \n  osmdata_sf() %&gt;% \n  pluck(\"osm_polygons\")\n\nggplot() +\n  geom_sf(data = nuuk_roads, linewidth = .5) +\n  geom_sf(data = nuuk_buildings)  +\n  coord_sf(xlim = c(-51.748, -51.65), ylim = c(64.157, 64.203)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\nI lived in Nuuk, the Capital city of Greenland, for 3 years. Per the latest census, it has a total population of 19,872 people. I know that sounds tiny, considering that it’s an actual capital of an actual country, but it never felt small while I was there.\nThe city had just expanded, with many people (families especially), moving into the eastern part of town called Qinngorput.\nThere are now 4 distinct parts of town, called city districts: Downtown Nuuk (just called Nuuk), Quassussuup Tungaa, Nuussuaq and Qinngorput. Every district has its own vibe. Some have more immigrants and students, and some are full of families with children.\nIn this post, I’ll walk you through how I would go about analyzing the population structure of Nuuk, using R and the Tidyverse."
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#the-city",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#the-city",
    "title": "Population Dynamics of Nuuk",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(osmdata)\n\nnuuk_roads &lt;- opq(\"Nuuk, Greenland\") %&gt;% \n  add_osm_feature(\"highway\") %&gt;% \n  osmdata_sf() %&gt;% \n  pluck(\"osm_lines\")\n\nnuuk_buildings &lt;- opq(\"Nuuk, Greenland\") %&gt;% \n  add_osm_feature(\"building\") %&gt;% \n  osmdata_sf() %&gt;% \n  pluck(\"osm_polygons\")\n\nggplot() +\n  geom_sf(data = nuuk_roads, linewidth = .5) +\n  geom_sf(data = nuuk_buildings)  +\n  coord_sf(xlim = c(-51.748, -51.65), ylim = c(64.157, 64.203)) +\n  theme_void()\n\n\n\n\n\n\n\n\n\nI lived in Nuuk, the Capital city of Greenland, for 3 years. Per the latest census, it has a total population of 19,872 people. I know that sounds tiny, considering that it’s an actual capital of an actual country, but it never felt small while I was there.\nThe city had just expanded, with many people (families especially), moving into the eastern part of town called Qinngorput.\nThere are now 4 distinct parts of town, called city districts: Downtown Nuuk (just called Nuuk), Quassussuup Tungaa, Nuussuaq and Qinngorput. Every district has its own vibe. Some have more immigrants and students, and some are full of families with children.\nIn this post, I’ll walk you through how I would go about analyzing the population structure of Nuuk, using R and the Tidyverse."
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#data-import",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#data-import",
    "title": "Population Dynamics of Nuuk",
    "section": "Data import",
    "text": "Data import\nStatistics Greenland maintains a census table on the population of Nuuk, updated once a year. It’s available through the Statbank here. While I could go ahead and download the data from their site, it’s much easier to query the API from R instead.\nI wrote an API wrapper for work few years ago, while I still worked full time at Stats Greenland. This was written to speed up my workflow, when working with Statbank data in R, and was mostly for internal use. We ended up publishing it on our Github.\nKnowing that the Table ID for the data I’m interested in is \"BEESTNUK\", I can fetch the data like this:\n\nlibrary(statgl)\n\nstatgl_fetch(\"BEESTNUK\")\n\n# A tibble: 31 × 2\n   time  value\n   &lt;chr&gt; &lt;int&gt;\n 1 1994  12483\n 2 1995  12723\n 3 1996  12882\n 4 1997  12909\n 5 1998  13024\n 6 1999  13169\n 7 2000  13445\n 8 2001  13649\n 9 2002  13884\n10 2003  13884\n# ℹ 21 more rows\n\n\nBy default, it’s going to give me all values in the mandatory variables, which in this case is time. I can explore what options I have for querying this table by calling statgl_meta(\"BEESTNUK\"), and once I know what I need, I can make a query that looks like this:\n\nnuk_raw &lt;- statgl_fetch(\n  \"BEESTNUK\", age = 0:99, citydistrict = c(1:4, 9),\n  `place of birth` = c(\"N\", \"S\"), gender = c(\"M\", \"K\")\n)\n\nnuk_raw\n\n# A tibble: 62,000 × 6\n   age   citydistrict `place of birth` gender time  value\n   &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;\n 1 0     Nuuk         Greenland        Men    1994     63\n 2 0     Nuuk         Greenland        Men    1995     75\n 3 0     Nuuk         Greenland        Men    1996     71\n 4 0     Nuuk         Greenland        Men    1997     57\n 5 0     Nuuk         Greenland        Men    1998     78\n 6 0     Nuuk         Greenland        Men    1999     65\n 7 0     Nuuk         Greenland        Men    2000     50\n 8 0     Nuuk         Greenland        Men    2001     47\n 9 0     Nuuk         Greenland        Men    2002     50\n10 0     Nuuk         Greenland        Men    2003     54\n# ℹ 61,990 more rows\n\n\nThis is basically a count table. Reading the first row tells me that on Jan. 1st 1994, there were 63 boys aged 0, who were born in Greenland, and lived in the Nuuk city district. That number was 75 the year after and so on."
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#tidy",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#tidy",
    "title": "Population Dynamics of Nuuk",
    "section": "Tidy",
    "text": "Tidy\nWhen tidying data, I first want to make sure that every column is a variable. That seems to be the case in this data, so my next instinct is to make sure that every row is an observation. In other words: I want to make sure that every row in this dataset is a person.\nThere is a cool function in the tidyr package called uncount, which repeats rows in a dataset according to a weighting variable. This means that I can turn the 63 boys I talked about earlier, into 63 rows in the dataset:\n\nlibrary(tidyverse)\n\nnuk_raw %&gt;% uncount(value)\n\n# A tibble: 484,724 × 5\n   age   citydistrict `place of birth` gender time \n   &lt;chr&gt; &lt;chr&gt;        &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;\n 1 0     Nuuk         Greenland        Men    1994 \n 2 0     Nuuk         Greenland        Men    1994 \n 3 0     Nuuk         Greenland        Men    1994 \n 4 0     Nuuk         Greenland        Men    1994 \n 5 0     Nuuk         Greenland        Men    1994 \n 6 0     Nuuk         Greenland        Men    1994 \n 7 0     Nuuk         Greenland        Men    1994 \n 8 0     Nuuk         Greenland        Men    1994 \n 9 0     Nuuk         Greenland        Men    1994 \n10 0     Nuuk         Greenland        Men    1994 \n# ℹ 484,714 more rows"
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#transform",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#transform",
    "title": "Population Dynamics of Nuuk",
    "section": "Transform",
    "text": "Transform\nFor good measure, I’m making sure that age and time are defined as numeric variables:\n\nnuk_tidy &lt;- \n  nuk_raw %&gt;%\n  uncount(value) %&gt;% \n  mutate(age = as.numeric(age), time = as.numeric(time))\n\nI plan to dive into data from the latest census data when analyzing population structure. I have to make sure that I only look at data from the latest census when doing that:\n\nnuk_latest &lt;- nuk_tidy %&gt;% \n  filter(time == max(time))"
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#visualize",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#visualize",
    "title": "Population Dynamics of Nuuk",
    "section": "Visualize",
    "text": "Visualize\nThe whole point of visualizing data is to challenge your intuition. At the beginning of an analysis, you probably have a number of preconceived notions of the patterns you will find, like I did when looking at the data for the population of Nuuk.\nWhen drawing plots, you’re not looking for images that will prove your point. Indeed, if a plot proves you right in whatever notion you had, it’s probably not worth showing. The real power of a plot is that it can fundamentally surprise you, and you should chase the surprises if you’re looking for actual insight.\n\nTime series\nLet’s look at the population growth of town over time:\n\nnuk_tidy %&gt;% \n  ggplot(aes(x = time)) +\n  geom_line(stat = \"count\")\n\n\n\n\n\n\n\n\nNot that many surprises here. Population size has been on a steady ascent for decades, though it does seem to pick up lately. I would assume that it’s because of the new city district, right? Let’s try to visualize the growth of each district:\n\nnuk_tidy %&gt;% \n  ggplot(aes(x = time, fill = citydistrict)) +\n  geom_area(stat = \"count\", color = \"white\")\n\n\n\n\n\n\n\n\nThis plot changes my take on things. It seems that the expansion in Qinngorput happens at the expense of growth in other parts of town, especially Quassussuup Tungaa. The people who were likely to move to Quassussuup, ended up moving to Qinngorput once there was space for them there.\nMy assumption is also that there are clear differences in the composition of age between the districts. My take was always that young people lived in Qinngorput and Quassussuup, while older people lived in Nuuk and Nuussuaq. This is a plot of the mean ages for each district:\n\nnuk_tidy %&gt;% \n  ggplot(aes(x = time, y = age, color = citydistrict)) +\n  geom_line(stat = \"summary\", fun = \"mean\") \n\n\n\n\n\n\n\n\nThe Unknown group consists of very few people, so the pattern here is more of a data quality issue. The most interesting pattern is that of Qinngorput. I know that there are many families with children, so I’m guessing that’s what drives the (sustained) low mean age.\nI also found another pattern when messing around with visualizing time series. I would expect there to be a 50-50 split of men and women in town, and for that to be pretty steady across time. Right?\n\nnuk_tidy %&gt;% \n  ggplot(aes(x = time, color = gender)) +\n  geom_line(stat = \"count\")\n\n\n\n\n\n\n\n\nWait, what?\n\n\nDistributions\nThe last plot taught me that there are substantially more men than women in Nuuk. I have a couple of ideas why, one of which is distribution of age. Looking at the latest census data, I can visualise the distribution like this:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = age, fill = gender)) +\n  geom_histogram(binwidth = 1)\n\n\n\n\n\n\n\n\nThe two big humps in the distribution are millennials and boomers. Histograms colored in by a categorical variable like this, show the groups stacked on top of each other by default. This actually makes it hard to compare the groups, and can even give the false impression that there are twice as many men as women, across all age groups.\nA more sensible way to compare the distributions is to position one group in front of the other, rather than on top. This is done with a position = \"identity\" statement:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = age, fill = gender)) +\n  geom_histogram(binwidth = 1, position = \"identity\", alpha = .6)\n\n\n\n\n\n\n\n\nThis tells me that number of men and women are about the same for milennials and younger, and there are more men than women in ages 40 and up.\nA better way of comparing the distribution would probably be to map the genders to the x-axis, the ages to the y-axis, and representing the distribution by some kind of geom. A very common example is the boxplot:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nWhile the boxplot is super common, especially in statistical texts, I’ve come to dislike them for 2 main reasons:\n\nThe stats needed to draw them are not self-explanatory. You need to know what a median and IQR is, and how the whiskers are defined can even change between plots.\nThe rich distribution we saw earlier is completely gone.\n\nI think a better alternative is to draw a violin. While it’s not completely apparent what determines the width of the violin, it at least makes some intuitive sense. You capture more of the richness of the distributions too:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age)) +\n  geom_violin()\n\n\n\n\n\n\n\n\nI can definitely tell that the violin representing men is wider at ages 40-50, while narrower in the same age range for women. While this is better, I still don’t have a good grasp of the size for the each group. When I’m in this situation, I would like to show the data - e.g. drawing a point for each observation. Something like:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age)) +\n  geom_point(size = .1, position = \"jitter\")\n\n\n\n\n\n\n\n\nWhile the dense regions with millennials and boomers are apparent, I’d say a jitter like this actually gives a worse sense of the distributions. The best graph I can come up with is a compromise between a violin and a jitter, called a sina. There’s a geom function for it in a ggplot2 extension called ggforce:\n\nlibrary(ggforce)\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1)\n\n\n\n\n\n\n\n\n\n\nFacets\nI’m still interested in comparing different groups of the data set. A very effective way of doing that is to draw different facets in the plot, i.e. repeating the same plot for different subsets of the data. If I facet the plot according to the column called place of birth, I get this graph:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1) +\n  facet_wrap(~`place of birth`)\n\n\n\n\n\n\n\n\nThis plot genuinely blew my mind, first time I drew it. It explains why there are more men than women in the city, and tells an engaging story of the differences in the population of town. There is a definite difference in the age distribution of genders, primarily in people born outside of Greenland.\nI wonder if it was always like this? I can do a quick filter on the tidy dataset, to see if it was like this in the earliest data (1994):\n\nnuk_tidy %&gt;% \n  filter(time == min(time)) %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1) +\n  facet_wrap(~`place of birth`)\n\n\n\n\n\n\n\n\nYeah, something has happened. The age distribution of women born outside Greenland is especially interesting.\nOne final thesis I have, is that the different districts have distinct age distributions. I alluded to this in the time series of mean ages I drew earlier. I can keep the facets of birthplace, and introduce another facet by calling facet_grid:\n\nnuk_latest %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1) +\n  facet_grid(`place of birth` ~ citydistrict)\n\n\n\n\n\n\n\n\nWhile this plot can be a bit overwhelming, I like how it displays every variable of the dataset. All of the information is there, and it’s easy to tell if one group differs from others in the city.\nPeople born outside Greenland explain many of the dynamics in town, especially the men aged 40 and over. Qinngorput is a definite suburb, with many kids compared to the other districts.\nOne final thing I wan to change is the order in which the information is shown. Right now, all of the categorical variables are sorted alphabetically, which is pretty much arbitrary. I think a better way of displaying the data, is to sort them by the number of observations in each group. This can be done by using the fct_infreq function of forcats:\n\nnuk_latest %&gt;% \n  mutate(across(where(is.character), fct_infreq)) %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1) +\n  facet_grid(`place of birth` ~ citydistrict) \n\n\n\n\n\n\n\n\n\n\nTheme\nThis final plot shows most of the insight I was able to gather from analysis. To make sure it’s presentable, I would spend some time making it more visually appealing. This means picking good colors for the scale, a better background color, tweaking grid lines etc.\nThe statgl package comes with a color scale function, which I like.\nSome time should be spent thinking about a good title and caption, and what axis labels should be there. Something like this:\n\nnuk_latest %&gt;% \n  mutate(\n    citydistrict = word(citydistrict),\n    across(where(is.character), fct_infreq)\n  ) %&gt;% \n  ggplot(aes(x = gender, y = age, color = gender)) +\n  ggforce::geom_sina(size = .1) +\n  facet_grid(`place of birth` ~ citydistrict) +\n  scale_color_statgl() +\n  scale_y_continuous(labels = scales::unit_format(suffix = \" yrs\")) +\n  labs(\n    title = \"Where are the women of Nuuk?\",\n    subtitle = \"Immigrant dynamics drive a stark gender imbalance in Greenland's capital\",\n    caption = paste0(\"Source: bank.stat.gl/BEESTNUK (\", max(nuk_tidy$time), \")\"),\n    x = NULL, y = NULL) +\n  theme_light() +\n  theme(\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\"\n  )"
  },
  {
    "objectID": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#some-takeaways",
    "href": "blog/2025-01-01-Nuuk Population Dynamics/visualising-nuuk.html#some-takeaways",
    "title": "Population Dynamics of Nuuk",
    "section": "Some takeaways",
    "text": "Some takeaways\n\nThere are many more men than women in Nuuk, and the men tend to be older.\nThis is in large part due to immigration.\nYoungest part of town is Qinngorput, with young parents and children being a reason why.\n\nI hope this was helpful. Small projects like this was a big part of how I got comfortable working with R and other data science tools."
  }
]